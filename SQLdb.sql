/* 1. DISPLAY EMPLOYEE ID, EMPLOYEE NAME, SALARY AMOUNT, SALARY ID FROM FROM TABLES EMPLOYEE AND SALARY USING INNER JOIN. */

SELECT EID, ENAME, AMOUNT, EMPLOYEE.SALARY_SALARY_ID FROM EMPLOYEE INNER JOIN SALARY ON EMPLOYEE.SALARY_SALARY_ID = SALARY.SALARY_ID WHERE AMOUNT <= 5000;

OUTPUT:

104	TONY STARK	4000	100
103	KELLY JONES	5000	101

/* 2. DISPLAY ORDER ID FROM ORDERS TABLE AND PRODUCT PRICE AND PRODUCT ID FROM PRODUCT TABLE WHERE PRODUCT PRICE IS LESS THAN 500.  */

SELECT ORDER_ID, PRODUCT_PRICE, PRODUCT.PRODUCT_ID FROM ORDERS FULL OUTER JOIN PRODUCT ON ORDERS.PRODUCT_ID = PRODUCT.PRODUCT_ID WHERE PRODUCT.PRODUCT_PRICE <500;

OUTPUT:

302	40	403
301	70	404
(NULL)	150	405
303	50	406

/* 3. DISPLAY ORDER ID, PRODUCT ID, CUSTOMER ID FROM ORDERS TABLE, PRODUCT PRICE FROM PRODUCT TABLE AND CUSTOMER FIRST NAME AND CUSTOMER LAST NAME FROM CUSTOMER TABLE ORDERED BY CUSTOMER ID. */

SELECT ORDER_ID, PRODUCT_PRICE, ORDERS.PRODUCT_ID, ORDERS.CID, CUSTOMER.FNAME, CUSTOMER.LNAME FROM ORDERS FULL OUTER JOIN PRODUCT ON ORDERS.PRODUCT_ID = PRODUCT.PRODUCT_ID FULL OUTER JOIN CUSTOMER ON ORDERS.CID = CUSTOMER.CID WHERE PRODUCT.PRODUCT_PRICE = 850 ORDER BY CUSTOMER.CID;

OUTPUT:

300	850	401	1	ROHIT	AKOLE
304	850	401	4	ANN	CHRISTIAN

/* 4. DISPLAY PRODUCT NAME AND PRODUCT ID, CATEGORY ID FROM PRODUCT TABLE AND CATEGORY NAME FROM CATEGORY BY JOINING PRODUCT TABLE TO CATEGORY TABLE. */

SELECT PRODUCT_NAME, PRODUCT_ID, CATEGORY_ID FROM PRODUCT INNER JOIN CATEGORY ON PRODUCT.CATEGORY_CATEGORY_ID = CATEGORY.CATEGORY_ID WHERE CATEGORY_ID = 101 ORDER BY PRODUCT_NAME;

OUTPUT:

APPLE IPHONE X		402	101	ELECTRONICS
SAMSUNG GALAXY S9+	401	101	ELECTRONICS

/* 5. DISPLAY EMPLOYEE ID, NAME, SSN, HIRE DATE, SALARY_ID FROM EMPLOYEE TABLE AND AMOUNT FROM SALARY TABLE WITH THE CONDITION OF SALARY MORE THAN 4000 AND IT IS ORDERED BY EMPLOYEE'S NAME. */

SELECT EID, ENAME, HIRE_DATE, SSN, SALARY_SALARY_ID, AMOUNT FROM EMPLOYEE INNER JOIN SALARY ON EMPLOYEE.SALARY_SALARY_ID = SALARY.SALARY_ID WHERE AMOUNT > 4000 ORDER BY ENAME;

OUTPUT:

103	KELLY JONES		23-APR-09	3452342345	101	5000
100	RONALD SCOFIELD	10-MAR-06	3453452345	103	7000
102	SACHIN PATIL		02-MAR-08	5564545243	102	6000
101	SAM WINCHESTER		01-JAN-07	3453465463	104	8000

/* 6. DISPLAY EMPLOYEE ID, EMPLOYEE NAME, DEPARTMENT ID FROM EMPLOYEE TABLE AND DEPARTMENT LOCATION FROM DEPARTMENT TABLE, SHOW ONLY THE EMPLOYEES WHO WORKS IN NEW HAVEN, CT. */

SELECT EID, ENAME, EMPLOYEE.DEPT_ID, DEPARTMENT.DEPT_LOCATION FROM EMPLOYEE INNER JOIN DEPARTMENT ON EMPLOYEE.DEPT_ID = DEPARTMENT.DEPT_ID WHERE DEPT_LOCATION = 'NEW HAVEN, CT';

OUTPUT:

100	RONALD SCOFIELD	101	NEW HAVEN, CT
101	SAM WINCHESTER		102	NEW HAVEN, CT
102	SACHIN PATIL		103	NEW HAVEN, CT

/*7. DISPLAY DEPENDENT ID, NAME, RELATION TO THE EMPLOYEE, EMPLOYEE ID FROM DEPENDENT TABLE, AND EMPLOYEE NAME AND SSN FROM EMPLOYEE TABLE USING INNER JOIN AND ORDERED BY DEPENDENT NAME. */

SELECT DEPENDENT_ID, DEPENDENT_NAME, DEPENDENT_RELATION, DEPENDENT.EMPLOYEE_EID, ENAME, SSN FROM DEPENDENT INNER JOIN EMPLOYEE ON DEPENDENT.EMPLOYEE_EID = EMPLOYEE.EID ORDER BY DEPENDENT_NAME;

OUTPUT:

503	DEAN WINCHESTER	SON		101	SAM WINCHESTER		3453465463
501	ERIKA JONES		DAUGHTER	103	KELLY JONES		3452342345
502	MASON STARK		SON		104	TONY STARK		3478845797
504	SAYALI PATIL		WIFE		102	SACHIN PATIL		5564545243
505	VICTOR SCOFIELD		FATHER		100	RONALD SCOFIELD	3453452345

/* 8. DISPLAY EMPLOYEE INFORMATION WHO WORKS AS A TECH SUPPORT AND JOINED AFTER 01-01-09. */

SELECT EID, ENAME, SSN, HIRE_DATE, EMAIL, DEPARTMENT.DEPT_NAME FROM EMPLOYEE INNER JOIN DEPARTMENT ON EMPLOYEE.DEPT_ID = DEPARTMENT.DEPT_ID WHERE HIRE_DATE > '01-JAN-09' AND DEPT_NAME = 'TECH SUPPORT';

OUTPUT:

103	KELLY JONES	3452342345	23-APR-09	KJONES@GMAIL.COM	TECH SUPPORT

/* 9. DISPLAY CUSTOMER INFORMATION WITH THEIR ORDERS AND PRICE OF THE ORDERS AND ORDER THEM BY CUSTOMER'S LAST NAME. */

SELECT CUSTOMER.CID, FNAME, LNAME, ORDERS.ORDER_ID, PRODUCT.PRODUCT_PRICE FROM CUSTOMER INNER JOIN ORDERS ON CUSTOMER.CID = ORDERS.CID 
INNER JOIN PRODUCT ON ORDERS.PRODUCT_ID = PRODUCT.PRODUCT_ID ORDER BY LNAME;

OUTPUT:

1	ROHIT	AKOLE		300	850
4	ANN	CHRISTIAN	304	850
3	KEVIN	HART		303	50
2	ROBIN	KING		301	70
2	ROBIN	KING		302	40

/* 10. COUNT SALARY AMOUNT AND DISPLAY AMOUNTS OF THE SALARY. */

SELECT COUNT(SALARY.AMOUNT), AMOUNT FROM EMPLOYEE INNER JOIN SALARY ON EMPLOYEE.SALARY_SALARY_ID = SALARY.SALARY_ID GROUP BY SALARY.AMOUNT ORDER BY COUNT(SALARY.AMOUNT);

OUTPUT:

1	8000
2	7000
2	6000

/* 11. DISPLAY FIRST AND LAST NAME TOGETHER, CUSTOMER ID FROM CUSTOMER TABLE AND ORDER ID FROM ORDERS TABLE BY JOINNING AND ORDERING BY CID. */

SELECT FNAME ||' '|| LNAME "CUSTOMER NAME", CUSTOMER.CID, ORDERS.ORDER_ID FROM CUSTOMER INNER JOIN ORDERS ON CUSTOMER.CID = ORDERS.CID ORDER BY CID;

OUTPUT:

ROHIT AKOLE	1	300
ROBIN KING	2	301
ROBIN KING	2	302
KEVIN HART	3	303
ANN CHRISTIAN	4	304

/* 12. COUNT THE ORDERS MADE BY EACH CUSTOMER. ORDER IT BY THE COUNTS. */

SELECT COUNT(ORDERS.CID) "NUMBER OF ORDERS BY CUSTOMER", CUSTOMER.CID FROM ORDERS INNER JOIN CUSTOMER ON ORDERS.CID = CUSTOMER.CID 
GROUP BY ORDERS.CID ORDER BY COUNT(ORDERS.CID);

OUTPUT:

NUMBER OF ORDERS BY CUSTOMER		CUSTOMER.CID
1					1
1					3
1					4
2					2

/* 13. DISPLAY ORDER ID FROM ORDERS TABLE AND PRODUCT PRICE AND PRODUCT ID FROM PRODUCT TABLE WHERE PRODUCT PRICE IS GREATER THAN OR EQUAL TO 300. 

SELECT ORDER_ID, PRODUCT_PRICE, PRODUCT.PRODUCT_ID FROM ORDERS FULL OUTER JOIN PRODUCT ON ORDERS.PRODUCT_ID = PRODUCT.PRODUCT_ID WHERE PRODUCT.PRODUCT_PRICE >=300;

OUTPUT:

300	850	401
304	850	401
(NULL)	1199	402

/* 14. DISPLAY EMPLOYEE INFORMATION WHOSE NAME START WITH R USING LIKE FUNCTION WITH DEPENDENT ID USING JOIN. */

SELECT EID, ENAME, DOB, HIRE_DATE, DEPENDENT_ID FROM EMPLOYEE INNER JOIN DEPENDENT ON EMPLOYEE.EID = DEPENDENT.EMPLOYEE_EID WHERE ENAME LIKE 'R%';

OUTPUT:

100	RONALD SCOFIELD	12-APR-85	10-MAR-06	505

/* 15. DISPLAY EMPLOYEE ID, EMPLOYEE NAME, SALARY AMOUNT, SALARY ID FROM TABLES EMPLOYEE AND SALARY USING INNER JOIN WHERE THE SALARY AMOUNT IS EQUAL TO 6000. */

SELECT EID, ENAME, AMOUNT, EMPLOYEE.SALARY_SALARY_ID FROM EMPLOYEE FULL OUTER JOIN SALARY ON EMPLOYEE.SALARY_SALARY_ID = SALARY.SALARY_ID WHERE AMOUNT = 6000;

OUTPUT:

103	KELLY JONES	6000	102
104	TONY STARK	6000	102








